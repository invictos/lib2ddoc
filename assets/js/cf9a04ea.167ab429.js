"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9263],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),s=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return i.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return t?i.createElement(f,a(a({ref:n},p),{},{components:t})):i.createElement(f,a({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},455:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var i=t(7462),r=t(3366),o=(t(7294),t(3905)),a=["components"],l={},c="\ud83e\udd47 Fonctions de validation",s={unversionedId:"Implementation/Specifications/Fonctions_validations",id:"Implementation/Specifications/Fonctions_validations",isDocsHomePage:!1,title:"\ud83e\udd47 Fonctions de validation",description:"\ud83d\udcdd Principe",source:"@site/docs/Implementation/Specifications/Fonctions_validations.md",sourceDirName:"Implementation/Specifications",slug:"/Implementation/Specifications/Fonctions_validations",permalink:"/lib2ddoc/docs/Implementation/Specifications/Fonctions_validations",editUrl:"https://gitlab.insa-rouen.fr/acamusat/lib2ddoc/-/edit/SiteWeb/website/docs/Implementation/Specifications/Fonctions_validations.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"\ud83c\udfea SpecificationStore",permalink:"/lib2ddoc/docs/Implementation/Specifications/SpecificationStore"},next:{title:"\ud83c\udfa9 En-t\xeates",permalink:"/lib2ddoc/docs/Implementation/decoder/Entete"}},p=[{value:"\ud83d\udcdd Principe",id:"-principe",children:[],level:2},{value:"\ud83d\udd27 Exemple avec FieldSpecification:",id:"-exemple-avec-fieldspecification",children:[],level:2},{value:"\u274c Erreurs",id:"-erreurs",children:[],level:2}],u={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-fonctions-de-validation"},"\ud83e\udd47 Fonctions de validation"),(0,o.kt)("h2",{id:"-principe"},"\ud83d\udcdd Principe"),(0,o.kt)("p",null,"Pour v\xe9rifier la validit\xe9 d'un document, on doit tester deux principaux points :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Si il contient bien tous les DI obligatoires."),(0,o.kt)("li",{parentName:"ul"},"Si la valeur des DI est conforme a leurs sp\xe9cifications.")),(0,o.kt)("p",null,"Pour cela, on utilise deux m\xe9thodes de validation pour chaque point: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Une m\xe9thode ensembliste:",(0,o.kt)("br",{parentName:"li"}),"On va tester si les valeurs sont pr\xe9sentes dans un ensemble pr\xe9d\xe9termin\xe9"),(0,o.kt)("li",{parentName:"ul"},"Une m\xe9thode via fonction\nOn va appliquer une fonction de validation sur les valeurs")),(0,o.kt)("p",null,"On a donc 4 fichiers li\xe9 \xe0 la validation. Les appels \xe0 ces fonctions de validation sont inclus dans les Specifications."),(0,o.kt)("h2",{id:"-exemple-avec-fieldspecification"},"\ud83d\udd27 Exemple avec FieldSpecification:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"\npub struct FieldSpecification{\n    pub id: &'static str,\n    pub nom: &'static str,\n    pub taille_min: i16,\n    pub taille_max: i16,\n    pub type_identifiant: &'static str,\n    pub description: &'static str,\n    pub validate: ValidatingConditionField,\n}\n\npub enum ValidatingConditionField {\n    FUNCTION(Vec<fn(&str, bool) -> Result<(), Error>>),\n    SET(Vec<fn(&char, bool) -> Result<(), Error>>)\n}\n\n")),(0,o.kt)("p",null,"et on a une m\xe9thode de FieldSpecification qui permet d'effectuer la validation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn validate(&self, value: &str, truncated: bool) -> Result<(), Vec<Error>>\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"On peut m\xeame tester plusieurs fonction sur un m\xeame champ, c'est-\xe0-dire tester plusieurs conditions."))),(0,o.kt)("h2",{id:"-erreurs"},"\u274c Erreurs"),(0,o.kt)("p",null,"De plus, on a cr\xe9e un type d'erreur sp\xe9cifique \xe0 la validation des documents:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pub struct Error{\n    pub kind: ErrorKind,\n    pub value: String\n}\n\npub enum ErrorKind {\n    General,\n    NotInSet,\n    FailedFunction,\n    SizeNotRespected,\n    InvalidCaracter,\n    DocumentFields\n}\n")))}d.isMDXComponent=!0}}]);