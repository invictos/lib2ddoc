"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[683],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return b}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(n),b=o,f=d["".concat(c,".").concat(b)]||d[b]||p[b]||i;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9152:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),l=["components"],a={},c="\ud83d\udcbb Bindgen",s={unversionedId:"Modules_externes/bindgen",id:"Modules_externes/bindgen",isDocsHomePage:!1,title:"\ud83d\udcbb Bindgen",description:"https://github.com/rust-lang/rust-bindgen",source:"@site/docs/Modules_externes/bindgen.md",sourceDirName:"Modules_externes",slug:"/Modules_externes/bindgen",permalink:"/lib2ddoc/docs/Modules_externes/bindgen",editUrl:"https://gitlab.insa-rouen.fr/acamusat/lib2ddoc/-/edit/SiteWeb/website/docs/Modules_externes/bindgen.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"\ud83d\ude80 FFI libDMTX",permalink:"/lib2ddoc/docs/Modules_externes/ffi"},next:{title:"\ud83e\uddf0 Utilisation de libDMTX en rust",permalink:"/lib2ddoc/docs/Modules_externes/libDMTX_rust"}},u=[{value:"\ud83d\udcdd Principe",id:"-principe",children:[],level:2},{value:"\ud83d\udd27 Utilisation",id:"-utilisation",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-bindgen"},"\ud83d\udcbb Bindgen"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/rust-lang/rust-bindgen"},"https://github.com/rust-lang/rust-bindgen"))),(0,i.kt)("h2",{id:"-principe"},"\ud83d\udcdd Principe"),(0,i.kt)("p",null,"Permet de transformer des .h en interface .rs\nCargo recup\xe8re les sources, compile & install le binary  ",(0,i.kt)("inlineCode",{parentName:"p"},"/home/foo/.cargo/bin/bindgen")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"apt install llvm-dev libclang-dev clang")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"cargo install bindgen")),(0,i.kt)("h2",{id:"-utilisation"},"\ud83d\udd27 Utilisation"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"bindgen --allowlist-function 'dmtx.' --allowlist-type 'Dmtx.' --allowlist-var 'Dmtx.*' dmtx.h -o test.rs --no-layout-tests")),(0,i.kt)("p",null,"On pr\xe9cise a rust de ne pas afficher les erreurs de style de code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"#![allow(non_camel_case_types)]\n#![allow(non_snake_case)]\n#![allow(deref_nullptr)]\n#![allow(non_upper_case_globals)]\n#![allow(dead_code)]\n")),(0,i.kt)("p",null,"On obtient finalement un fichier FFI pour rust, chez nous ",(0,i.kt)("strong",{parentName:"p"},"/src/libdmtx/libdmtx_sys.rs")))}d.isMDXComponent=!0}}]);